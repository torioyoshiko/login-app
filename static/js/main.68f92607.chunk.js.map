{"version":3,"sources":["reducers/user.reducer.js","reducers/index.js","reducers/todos.reducer.js","utils/firebaseApp.js","components/RegisterPage.js","actions/todos.actions.js","components/list.js","components/LoginPage.js","actions/user.action.js","providers/userProvider.js","App.js","middleware/todoPersistor.js","index.js"],"names":["user","state","loaded","action","type","payload","combineReducers","todos","newState","concat","filter","todo","index","firebase","apiKey","authDomain","databaseURL","projectId","appId","RegisterPage","useState","email","setEmail","password","setPassword","history","useHistory","registerUser","a","auth","setPersistence","Auth","Persistence","LOCAL","firebaseApp","createUserWithEmailAndPassword","push","className","placeholder","onChange","e","target","value","onClick","setTodos","connect","props","setTodo","db","firestore","getInfo","todoList","collection","doc","uid","get","exists","dispatch","data","useEffect","signOut","currentUser","input","addToTodos","map","key","removeTodo","onRemoveTodo","LoginPage","loginUser","signInWithEmailAndPassword","setUser","onAuthStateChanged","newUser","App","exact","path","process","component","List","store","createStore","rootReducer","applyMiddleware","next","result","console","log","getState","set","saveTodosToDb","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68f92607.chunk.js","sourcesContent":["const user = (state = {user: null, loaded: false}, action) => {\r\n    switch (action.type) {\r\n        case \"SET_USER\":\r\n            return  {user: action.payload, loaded: true};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","import { combineReducers } from 'redux'\r\nimport {todos} from \"./todos.reducer\";\r\nimport user from \"./user.reducer\";\r\n\r\nexport default combineReducers({user: user, todos: todos})","export const todos = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TODO\":\r\n            const newState = state.concat(action.payload)\r\n            return newState;\r\n        case \"REMOVE_TODO\":\r\n            return state.filter((todo, index)=> {\r\n                return index !== action.payload\r\n            });\r\n        case \"SET_TODOS\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDkIyLvI4sNmZKm227djMHBMDqKVZ7RQuI\",\r\n    authDomain: \"login-app-85261.firebaseapp.com\",\r\n    databaseURL: \"https://login-app-85261.firebaseio.com\",\r\n    projectId: \"login-app-85261\",\r\n    appId: \"1:267875740811:web:1655fb669f08686b22788e\",\r\n};\r\n\r\nexport default firebase.initializeApp(firebaseConfig);\r\n\r\n","import React, {useState} from 'react';\r\nimport './css/RegisterPage.css';\r\nimport firebaseApp from \"../utils/firebaseApp\";\r\nimport firebase from \"firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst RegisterPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory();\r\n\r\n    const registerUser = async () => {\r\n        await firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n        await firebaseApp.auth().createUserWithEmailAndPassword(email, password);\r\n        history.push(\"/list\");\r\n    }\r\n\r\n    const login = () => {\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='main'>\r\n                <p className='text'>Welcome</p>\r\n                <input placeholder='Email' onChange={(e) => setEmail(e.target.value)} className='input-form'/>\r\n                <input placeholder='Password' type=\"password\" onChange={(e) => setPassword(e.target.value)}\r\n                       className='input-form'/>\r\n                <button className='button' onClick={registerUser}>Sign Up</button>\r\n                <p className='login-text'>Already with us?</p>\r\n                <button className='button' onClick={login}>Log in</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;\r\n","export const addTodo = (newTodo) => {\r\n    return {\r\n        type: \"ADD_TODO\",\r\n        payload: newTodo\r\n    }\r\n}\r\n\r\nexport const removeTodo = (index) => {\r\n    return {\r\n        type: \"REMOVE_TODO\",\r\n        payload: index\r\n    }\r\n}\r\n\r\nexport const setTodos = (todos) => {\r\n    return {\r\n        type: \"SET_TODOS\",\r\n        payload: todos\r\n    }\r\n}","import './css/list.css'\r\nimport React, {useEffect, useState} from 'react';\r\nimport firebase from \"../utils/firebaseApp\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport {addTodo, removeTodo, setTodos} from '../actions/todos.actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {todos: state.todos, user: state.user}\r\n}\r\n\r\nconst List = (props) => {\r\n    const history = useHistory();\r\n    const [todo, setTodo] = useState('');\r\n    const db = firebase.firestore();\r\n\r\n    const getInfo = async () => {\r\n        if (props.user.user) {\r\n            const todoList = db.collection(\"userTodos\").doc(props.user.user.uid);\r\n            const doc = await todoList.get()\r\n            if (doc.exists) {\r\n                props.dispatch(setTodos(doc.data().todos))\r\n            } else {\r\n                props.dispatch(setTodos([]))\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo();\r\n    }, [props.user])\r\n\r\n    if (props.user.loaded === false) {\r\n        return null\r\n    }\r\n\r\n    if (!props.user.user) {\r\n        history.push('/')\r\n        return null;\r\n    }\r\n\r\n    const signOut = async() => {\r\n        await firebase.auth().signOut()\r\n    }\r\n\r\n    const onTodoChange = (input) => {\r\n        setTodo(input);\r\n    }\r\n\r\n    const addToTodos = (todo) => {\r\n        props.dispatch(addTodo(todo))\r\n    }\r\n\r\n    const onRemoveTodo = (index) => {\r\n        props.dispatch(removeTodo(index))\r\n    }\r\n\r\n    return (\r\n        <div className='main-list'>\r\n            <div className='profile-info'>\r\n                <p className='text-profile'>Logged in as {firebase.auth().currentUser.email}</p>\r\n                <p className='text-profile'>{props.state}</p>\r\n                <button className='button-profile' onClick={signOut}>Sign Out</button>\r\n            </div>\r\n            <div className='write-task'>\r\n                <input\r\n                    onChange={(e) => onTodoChange(e.target.value)}\r\n                    className='list-input'\r\n                    placeholder='Write your task here'\r\n                    value={todo}\r\n                />\r\n                <button onClick={() => addToTodos(todo)} className='create-button first'>Create</button>\r\n            </div>\r\n            <div className='list'>\r\n                <p className='main-word'>Tasks:</p>\r\n                {props.todos.map((todo, index) =>\r\n                    <div key={index} className='single-task'>\r\n                        <p className='task'>{todo}</p>\r\n                        <button onClick={() => onRemoveTodo(index)} className='list-button'>✓</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);\r\n","import React, {useState} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport firebaseApp from \"../utils/firebaseApp\";\r\nimport firebase from \"firebase\";\r\n\r\nconst LoginPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory();\r\n\r\n    const loginUser = async () => {\r\n        await firebaseApp.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n        await firebaseApp.auth().signInWithEmailAndPassword(email, password);\r\n        history.push(\"/list\");\r\n    }\r\n\r\n    const newUser = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='main'>\r\n                <p className='text'>Welcome back</p>\r\n                <input placeholder='Email' onChange={(e) => setEmail(e.target.value)} className='input-form'/>\r\n                <input placeholder='Password' type=\"password\" onChange={(e) => setPassword(e.target.value)}\r\n                       className='input-form'/>\r\n                <button className='button' onClick={loginUser}>Log in</button>\r\n                <p className='login-text'>New user?</p>\r\n                <button className='button' onClick={newUser}>Sign in</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;\r\n","export const setUser = (user) => {\r\n    return {\r\n        type: \"SET_USER\",\r\n        payload: user\r\n    }\r\n}","import {useEffect} from 'react';\r\nimport firebase from \"../utils/firebaseApp\";\r\nimport {setUser} from \"../actions/user.action\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {user: state.user}\r\n}\r\n\r\nconst UserProvider = (props) => {\r\n    useEffect(() => firebase.auth().onAuthStateChanged(async (newUser) => {\r\n        props.dispatch(setUser(firebase.auth().currentUser))\r\n    }), [])\r\n\r\n    return null;\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserProvider)\r\n","import React from 'react';\nimport './App.css';\nimport RegisterPage from \"./components/RegisterPage\";\nimport {Route, Switch} from 'react-router-dom';\nimport List from \"./components/list\";\nimport LoginPage from \"./components/LoginPage\";\nimport UserProvider from \"./providers/userProvider\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Switch>\n            <Route exact path={process.env.PUBLIC_URL + '/'} component={RegisterPage}/>\n            <Route path={process.env.PUBLIC_URL + '/list'} component={List}/>\n            <Route path={process.env.PUBLIC_URL + '/login'} component={LoginPage}/>\n        </Switch>\n        <UserProvider/>\n    </div>\n  );\n}\n\nexport default (App);\n","import firebase from \"../utils/firebaseApp\";\r\nconst db = firebase.firestore();\r\n\r\n\r\nconst saveTodosToDb = (store, todos) => {\r\n    console.log(store.getState().user.user.uid)\r\n    db.collection(\"userTodos\").doc(store.getState().user.user.uid).set({\r\n        todos: todos\r\n    })\r\n}\r\n\r\nexport const todoPersistor = store => next => action => {\r\n    let result = next(action);\r\n\r\n    if(action.type === 'ADD_TODO' || action.type === 'REMOVE_TODO') {\r\n        console.log(store.getState())\r\n        saveTodosToDb(store, store.getState().todos)\r\n    }\r\n\r\n    return result;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport {  createStore, applyMiddleware } from 'redux'\nimport rootReducer from \"./reducers/index\";\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport {todoPersistor} from './middleware/todoPersistor'\n\nconst store = createStore(rootReducer, applyMiddleware(todoPersistor), undefined);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}